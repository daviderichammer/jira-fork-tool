[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jira-fork-tool"
version = "1.0.0"
description = "Comprehensive Jira project forking and synchronization tool"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Manus AI", email = "manus@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Bug Tracking",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "PyYAML>=6.0",
    "click>=8.1.0",
    "Flask>=2.3.0",
    "Jinja2>=3.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
security = [
    "cryptography>=41.0.0",
    "keyring>=24.2.0",
]
postgresql = [
    "psycopg2-binary>=2.9.0",
]

[project.scripts]
jira-fork-tool = "jira_fork_tool.main:main"

[project.urls]
Homepage = "https://github.com/yourusername/jira-fork-tool"
Repository = "https://github.com/yourusername/jira-fork-tool.git"
Issues = "https://github.com/yourusername/jira-fork-tool/issues"
Documentation = "https://github.com/yourusername/jira-fork-tool/docs"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["jira_fork_tool"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=jira_fork_tool",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["src/jira_fork_tool"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

